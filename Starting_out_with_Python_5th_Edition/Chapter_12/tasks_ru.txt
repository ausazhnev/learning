Данный файл содержит текст заданий раздела 'Упражнения по программированию' к главе 12:
'Рекурсия' книги: Начинаем программировать на Python. 5-е издание
Автор: Тони Гэддис

*************************************************************************************************

Задача #1: Рекурсивная печать.

Разработайте рекурсивную функцию, которая принимает целочисленный аргумент 'n' и распечатывает
числа от 1 до 'n'

Решение в файле 'task_13_1.py'

*************************************************************************************************

Задача #2: Рекурсивное умножение.

Разработайте рекурсивную функцию, которая принимает два аргумента в параметрах x и y. Данная
функция должна вернуть значения произведения x на y. При этом умножение должно быть выполнено,
как повторяющееся сложение, следующим образом:
Пример: 7 * 4 = 4 + 4 + 4 + 4 + 4 + 4 + 4.
Для упрощения функции исходите из того, что x и y будут всегда содержать положительные ненулевые
целые числа.

Решение в файле 'task_13_2.py'

*************************************************************************************************

Задача #3: Рекурсивные строки.

Напишите функцию, которая принимает целочисленный аргумент 'n'. Данная функция должна вывести на
экран 'n' строк, состоящих из звездочек, при этом первая строка должна показать 1 звездочки,
вторая строка - 2 звездочки и так до 'n'-й строки, которая должна показать 'n' звездочек.

Решение в файле 'task_13_3.py'

*************************************************************************************************

Задача #4: Максимальное значение в списке.

Разработайте функцию, которая принимает список в качестве аргумента и возвращает самое большое
число в списке. В данной функции для нахождения максимального значения должна использоваться
рекурсия.

Решение в файле 'task_13_4.py'

*************************************************************************************************

Задача #5: Рекурсивная сумма списка.

Разработайте функцию, которая принимает список в качестве аргумента. Она должна рекурсивно
вычислить сумму всех чисел в списке и вернуть это значение.

Решение в файле 'task_13_5.py'

*************************************************************************************************

Задача #6: Сумма чисел.

Разработайте функцию, которая принимает целочисленный аргумент и возвращает сумму всех чисел от 1
до числа, переданного в качестве аргумента. Например, если в качестве аргумента передано 50, то
данная функция вернет сумму числе 1, 2, 3, 4,... 50. Для вычисления суммы примените рекурсию.

Решение в файле 'task_13_6.py'

*************************************************************************************************

Задача #7: Рекурсивный метод возведения в степень.

Разработайте функцию, в которой рекурсия применяется для возведения числа в степень. Данная
функция должна принимать два аргумента: числ, которое возводится в степень и показатель степени.
Исходите из того, что показатель степени, является неотрицательным целым числом.

Решение в файле 'task_13_7.py'

*************************************************************************************************

Задача #8: Функция Аккерманна.

Функция Аккерманна является рекурсивным математическим алгоритмом, который используется для
проверки, насколько успешно система оптимизирует свою производительность в случае рекурсии.
Разработайте функцию ackerman(m, n), которая решает функцию Аккерманна. Примените в своей функции
следующую логику:
Если m = 0, то вернуть n + 1.
Если n = 0, то вернуть ackermann (m-1, 1)
Иначе, вернуть ackermann (m-1, ackermann(m, n-1))
После того как вы разработаете свою функцию, протестируйте ее с использованием небольших значений
'm' и 'n'

Решение в файле 'task_13_8.py'

*************************************************************************************************