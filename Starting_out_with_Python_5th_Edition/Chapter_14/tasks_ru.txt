Данный файл содержит текст заданий раздела 'Упражнения по программированию' к главе 12:
'Рекурсия' книги: Начинаем программировать на Python. 5-е издание
Автор: Тони Гэддис

*************************************************************************************************

Задача #1: База данных населения.

Напишите программу, которая подсоединяется к базе данных cities.db и позволяет пользователю
выбрать любую из следующих операций
 - Вывод на экран списка городов, отсортированных по численности населения в порядке возрастания.
 - Вывод на экран списка городов, отсортированных по численности населения в порядке убывания.
 - Вывод на экран списка городов, отсортированных по называнию.
 - Вывод на экран общей численности населения всех городов.
 - Вывод на экран города с наибольшей численностью населения.
 - Вывод на экран города с наименьшей численностью населения.

Решение в файле 'task_14_1.py'

*************************************************************************************************

Задача #2: Телефонная база данных.

Напишите программу, которая создаст базу данных с именем phonebook.db. В базе данных должны быть
таблица Entries со столбцами для имени и номера телефона человека. Далее напишите приложение
CRUD, которое позволяет пользователю добавлять строки в таблицу Entries, отыскивать номер
телефона человека, изменять его номер телефона и удалять заданные строки.

Решение в файле 'task_14_2.py'

*************************************************************************************************

Задача #3: Проект реляционной базы данных.

В этом задании вы создадите базу данных с именем student_info.db, содержащую следующую информацию
о студентах в колледже:
 - фамилию и имя студента.
 - специальность студента.
 - кафедру, на которую зачислен студент.
База данных должна содержать таблицы Majors (Специальность), Departments (Факультеты),
Students (Студенты). (скрин со структурой '../dop/task_14_3_db.png')
 - Напишите программу, которая создаст базу данных и таблицы.
 - Напишите программу, которая выполняет операции CRUD над таблицей Majors. В частности,
программа должна позволять пользователю выполнить следующие действия:
 -- Добавлять новую специальность.
 -- Отыскивать существующую специальность.
 -- Обновлять существующую специальность.
 -- Удалять существующую специальность.
 -- Выводить на экран список всех специальностей.
- Напишите программу, которая выполняет операции CRUD над таблицей Departments. В частности,
программа должна позволять пользователю выполнить следующие действия:
 -- Добавлять новый факультет.
 -- Отыскивать существующий факультет.
 -- Обновлять существующий факультет.
 -- Удалять существующий факультет.
 -- Выводить на экран список всех факультетов.
- Напишите программу, которая выполняет операции CRUD над таблицей Students. В частности,
программа должна позволять пользователю выполнить следующие действия:
 -- Добавлять нового студента.
 -- Отыскивать существующего студента.
 -- Обновлять существующего студента.
 -- Удалять существующего студента.
 -- Выводить на экран список всех студентов.
При добавлении, обновлении и удалении строк следует активировать поддержку внешних ключей. При
добавлении нового студента в таблицу Students пользователю должно быть разрешено выбирать только
существующую специальность из таблицы Majors и существующий факультет из таблицы Departments

Решение в файле 'task_14_3.py'

*************************************************************************************************